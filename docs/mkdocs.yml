site_name: LanceDB Documentation
site_url: https://lancedb.github.io/docs
repo_url: https://github.com/lancedb/lancedb
edit_uri: https://github.com/lancedb/documentation
repo_name: lancedb/lancedb
docs_dir: src
watch:
  - src
  - ../python/python

theme:
  name: "material"
  logo: assets/logo.png
  favicon: assets/logo.png
  palette:
    # Palette toggle for light mode
    - scheme: default
      primary: white
      accent: black
      toggle:
        icon: material/brightness-7 
        name: Switch to dark mode
    # Palette toggle for dark mode
    - scheme: slate
      primary: black
      accent: white
      toggle:
        icon: material/brightness-4
        name: Switch to light mode

  features:
    - announce.dismiss
    - content.code.copy
    - content.tabs.link
    - content.action.edit
    - content.tooltips
    - toc.follow
    # - navigation.top
    - navigation.tabs
    # - navigation.tabs.sticky
    - navigation.sections
    # - navigation.footer
    # - navigation.tracking
    # - navigation.instant
    - navigation.indexes
    - content.footnote.tooltips
  icon:
    repo: fontawesome/brands/github
    annotation: material/arrow-right-circle
  custom_dir: overrides

plugins:
  - redirects:
      redirect_maps:
        'basic.md': 'quickstart/index.md'
        'guides/storage/index.md': 'guides/storage/integrations.md'
        'concepts/data_management.md': 'concepts/data.md'
        'concepts/vector_search.md': 'concepts/search.md'
        'concepts/index_ivfpq.md': 'concepts/indexing.md'
        'concepts/index_hnsw.md': 'concepts/indexing.md'
        'troubleshooting.md': 'index.md'
        'guides/build-index.md': 'guides/indexing/vector-index.md'
        'guides/indexing/build-indexes.md': 'guides/indexing/vector-index.md'
        'guides/scalar_index.md': 'guides/indexing/scalar-index.md'
        'cloud/rest.md': 'api/cloud.md'
        'api_reference.md': 'api/index.md'
        'migration.md': 'api/api-changes.md'
        'faq.md': 'overview/faq.md'
        'cloud/cloud_faq.md': 'cloud/cloud-faq.md'
        'ann_indexes.md': 'guides/indexing/vector-index.md'
        'search.md': 'guides/search/vector-search.md'
        'fts.md': 'guides/search/full-text-search.md'
        'fts_tantivy.md': 'guides/search/full-text-search.md'
        'sql.md': 'guides/search/filtering.md'
        'hybrid_search/hybrid_search.md': 'guides/search/hybrid-search.md'
        'guides/multi-vector.md': 'guides/search/multivector-search.md'
        'hybrid_search/eval.md': 'reranking/eval.md'
        'cloud/introduction.md': 'cloud/index.md'
        'enterprise/introduction.md': 'enterprise/index.md'
        'enterprise/quickstart.md': 'overview/quickstart.md'
        'enterprise/architecture/architecture.md': 'enterprise/architecture.md'
        'enterprise/deploy/deployment.md': 'enterprise/deployment.md'
        'enterprise/benchmark/benchmark.md': 'enterprise/benchmark.md'
        'enterprise/security/security.md': 'enterprise/security.md'
        'api-reference/introduction.md': 'api/index.md'
        'resource/faq.md': 'enterprise/enterprise-faq.md'
        'core/understand-query-perf.md': 'guides/search/optimize-queries.md'
        'core/sql-query.md': 'guides/search/sql-queries.md'
        'core/versioning.md': 'guides/tables/versioning.md'
        'core/schema-evolution.md': 'guides/tables/schema.md'
        'core/filtering.md': 'guides/search/filtering.md'
        'core/hybrid-search.md': 'guides/search/hybrid-search.md'
        'core/full-text-search.md': 'guides/search/full-text-search.md'
        'core/multivector-search.md': 'guides/search/multivector-search.md'
        'core/vector-search.md': 'guides/search/vector-search.md'
        'core/index.md': 'guides/indexing/vector-index.md'
        'core/update.md': 'guides/tables/update.md'
        'core/ingestion.md': 'guides/tables/ingestion.md'
        'changelog/changelog.md': 'changelog/index.md'



  - search
  - neoteroi.mkdocsoad:
      use_pymdownx: true
  - autorefs
  - mkdocstrings:
      handlers:
        python:
          paths: ['../python']
          options:
            docstring_style: numpy
            heading_level: 3
            show_source: true
            show_symbol_type_in_heading: true
            show_signature_annotations: true
            show_root_heading: true
            members_order: source
            docstring_section_style: list
            signature_crossrefs: true
            separate_signature: true
          import:
            # for cross references
            - https://arrow.apache.org/docs/objects.inv
            - https://pandas.pydata.org/docs/objects.inv
            - https://lancedb.github.io/lance/objects.inv
            - https://docs.pydantic.dev/latest/objects.inv
  - mkdocs-jupyter
  - render_swagger:
      allow_arbitrary_locations: true

markdown_extensions:
  - admonition
  - footnotes
  - pymdownx.critic
  - pymdownx.caret
  - pymdownx.keys
  - pymdownx.mark
  - pymdownx.tilde
  - pymdownx.details
  - pymdownx.highlight:
      anchor_linenums: true
      line_spans: __span
      pygments_lang_class: true
  - pymdownx.inlinehilite
  - pymdownx.snippets:
      base_path: ..
      dedent_subsections: true
  - pymdownx.superfences
  - pymdownx.tabbed:
      alternate_style: true
  - md_in_html
  - abbr
  - attr_list
  - pymdownx.snippets
  - pymdownx.emoji:
      emoji_index: !!python/name:material.extensions.emoji.twemoji
      emoji_generator: !!python/name:material.extensions.emoji.to_svg
  - markdown.extensions.toc:
      baselevel: 1
      permalink: ""

use_directory_urls: false

nav:
  - Documentation:
      - Getting Started:
          - Homepage: index.md
          - How to Use This Docsite: overview/instructions.md
          - Quickstart:
              - Quickstart: quickstart/index.md
              - Basic Usage: quickstart/basic-usage.md
              - Working with Datasets: quickstart/datasets.md
      - Products:
          - What is LanceDB OSS?: 
              - Overview: overview/index.md
              - FAQs: overview/faq.md
          - LanceDB Cloud: 
              - Overview: cloud/index.md
              - Logging: cloud/logging.md
              - Cloud FAQ: cloud/cloud-faq.md
          - LanceDB Enterprise:
              - Overview: enterprise/index.md
              - Architecture: enterprise/architecture.md
              - Deployment: enterprise/deployment.md
              - Benchmark: enterprise/benchmark.md
              - Security: enterprise/security.md
              - FAQ: enterprise/enterprise-faq.md
      - Usage Guide:
          - Concepts:
              - Data: concepts/data.md
              - Vectors: concepts/vectors.md
              - Indexing: concepts/indexing.md
              - Search: concepts/search.md
              - Storage: concepts/storage.md
          - Tables:
              - Getting Started: guides/tables/index.md
              - Table Operations: guides/tables/create.md
              - Data Operations: guides/tables/update.md
              - Managing Schema: guides/tables/schema.md
              - Table Consistency: guides/tables/consistency.md
              - Versioning Tables: 
                  - Overview: guides/tables/versioning.md
                  - Sync API: notebooks/reproducibility.ipynb
                  - Async API: notebooks/reproducibility_async.ipynb
          - Indexing:
              - Vector Index: guides/indexing/vector-index.md
              - Scalar Index: guides/indexing/scalar-index.md
              - Full Text Index: guides/indexing/fts-index.md
              - Reindexing: guides/indexing/reindexing.md
              - GPU Indexing: guides/indexing/gpu-indexing.md
          - Search:
              - Vector Search: guides/search/vector-search.md
              - Full-Text Search (Native): guides/search/full-text-search.md
              - Full-Text Search (Tantivy): guides/search/full-text-search-tantivy.md
              - Hybrid Search: guides/search/hybrid-search.md
              - Multivector Search: guides/search/multivector-search.md
              - Filtering: guides/search/filtering.md
              - SQL Queries: guides/search/sql-queries.md
              - Query Planning: guides/search/query-planning.md
              - Optimizing Query Performance: guides/search/optimize-queries.md
          - Embeddings:
              - What are Embeddings?: embeddings/understanding_embeddings.md
              - Getting Started: embeddings/index.md
              - Embedding Models: embeddings/embedding_functions.md
              - Default Embedding Models: embeddings/default_embedding_functions.md
              - Text Embedding Models:
                  - Sentence Transformers: embeddings/available_embedding_models/text_embedding_functions/sentence_transformers.md
                  - Huggingface Embedding Models: embeddings/available_embedding_models/text_embedding_functions/huggingface_embedding.md
                  - Ollama Embeddings: embeddings/available_embedding_models/text_embedding_functions/ollama_embedding.md
                  - OpenAI Embeddings: embeddings/available_embedding_models/text_embedding_functions/openai_embedding.md
                  - Instructor Embeddings: embeddings/available_embedding_models/text_embedding_functions/instructor_embedding.md
                  - Gemini Embeddings: embeddings/available_embedding_models/text_embedding_functions/gemini_embedding.md
                  - Cohere Embeddings: embeddings/available_embedding_models/text_embedding_functions/cohere_embedding.md
                  - Jina Embeddings: embeddings/available_embedding_models/text_embedding_functions/jina_embedding.md
                  - AWS Bedrock Text Embedding Functions: embeddings/available_embedding_models/text_embedding_functions/aws_bedrock_embedding.md
                  - IBM watsonx.ai Embeddings: embeddings/available_embedding_models/text_embedding_functions/ibm_watsonx_ai_embedding.md
                  - Voyage AI Embeddings: embeddings/available_embedding_models/text_embedding_functions/voyageai_embedding.md
              - Multimodal Embedding Models:
                  - OpenClip embeddings: embeddings/available_embedding_models/multimodal_embedding_functions/openclip_embedding.md
                  - Imagebind embeddings: embeddings/available_embedding_models/multimodal_embedding_functions/imagebind_embedding.md
                  - Jina Embeddings: embeddings/available_embedding_models/multimodal_embedding_functions/jina_multimodal_embedding.md
              - User-Defined Embedding Models: embeddings/custom_embedding_function.md
              - Variables and Secrets: embeddings/variables_and_secrets.md
          - Reranking:
              - Quickstart: reranking/index.md
              - Cohere Reranker: reranking/cohere.md
              - Linear Combination Reranker: reranking/linear_combination.md
              - Reciprocal Rank Fusion Reranker: reranking/rrf.md
              - Cross Encoder Reranker: reranking/cross_encoder.md
              - ColBERT Reranker: reranking/colbert.md
              - Jina Reranker: reranking/jina.md
              - OpenAI Reranker: reranking/openai.md
              - AnswerDotAi Rerankers: reranking/answerdotai.md
              - Voyage AI Rerankers: reranking/voyageai.md
              - Building Custom Rerankers: reranking/custom_reranker.md
              - Comparing Rerankers: reranking/eval.md
          - Storage: guides/storage/integrations.md
      - Multimodal Lakehouse:
          - Overview: multimodal-lakehouse/index.md
          - Getting Started:
              - Startup Guide: multimodal-lakehouse/startup.md
              - Deployment: multimodal-lakehouse/deploy.md
              - Geneva Quickstart (Local): notebooks/geneva-quickstart-local.ipynb
              - Geneva Quickstart (Materialized View): notebooks/geneva-quickstart-materialized-view.ipynb
          - Features:
              - Overview: multimodal-lakehouse/features.md
              - Materialized Views: multimodal-lakehouse/features/materialized_views.md
              - PyTorch Integration: multimodal-lakehouse/torch.md
              - SQL Queries: multimodal-lakehouse/sql.md
          - User-Defined Functions:
              - Overview: multimodal-lakehouse/features/UDFs.md
              - Blobs: multimodal-lakehouse/udfs/blobs.md
              - Backfill: multimodal-lakehouse/features/backfill.md
          - API Reference:
              - Overview: multimodal-lakehouse/api.md
              - Connection: multimodal-lakehouse/api/connection.md
              - Table: multimodal-lakehouse/api/table.md
              - UDF: multimodal-lakehouse/api/udf.md
          - Troubleshooting: multimodal-lakehouse/troubleshooting.md
  - Tutorials & Integrations:
      - Integrations:
          - Overview: integrations/index.md
          - Platforms:
              - Pandas and PyArrow: python/pandas_and_pyarrow.md
              - Polars: python/polars_arrow.md
              - DuckDB: python/duckdb.md
              - Voxel51: integrations/voxel51.md
              - dlt: integrations/dlt.md
              - phidata: integrations/phidata.md
          - Frameworks:
              - LangChain:
                  - LangChain 🔗: integrations/langchain.md
                  - LangChain demo: notebooks/langchain_demo.ipynb
                  - LangChain JS/TS 🔗: https://js.langchain.com/docs/integrations/vectorstores/lancedb
              - LlamaIndex 🦙:
                  - LlamaIndex docs: integrations/llamaIndex.md
                  - LlamaIndex demo: notebooks/llamaIndex_demo.ipynb
              - Pydantic: python/pydantic.md
              - PromptTools: integrations/prompttools.md
              - Genkit: integrations/genkit.md
      - Tutorials:
          - Overview: examples/index.md
          - Python:
              - Overview: examples/examples_python.md
              - Build From Scratch: examples/python_examples/build_from_scratch.md
              - Multimodal: examples/python_examples/multimodal.md
              - Rag: examples/python_examples/rag.md
              - Vector Search: examples/python_examples/vector_search.md
              - Chatbot: examples/python_examples/chatbot.md
              - Evaluation: examples/python_examples/evaluations.md
              - AI Agent: examples/python_examples/aiagent.md
              - Recommender System: examples/python_examples/recommendersystem.md
              - Miscellaneous:
                  - Serverless QA Bot with S3 and Lambda: examples/serverless_lancedb_with_s3_and_lambda.md
                  - Serverless QA Bot with Modal: examples/serverless_qa_bot_with_modal_and_langchain.md
          - JavaScript:
              - Overview: examples/examples_js.md
              - Serverless Website Chatbot: examples/serverless_website_chatbot.md
              - YouTube Transcript Search: examples/youtube_transcript_bot_with_nodejs.md
              - TransformersJS Embedding Search: examples/transformerjs_embedding_search_nodejs.md
          - Rust:
              - Overview: examples/examples_rust.md
          - RAG:
              - Vanilla RAG: rag/vanilla_rag.md
              - Multi-Head RAG: rag/multi_head_rag.md
              - Corrective RAG: rag/corrective_rag.md
              - Agentic RAG: rag/agentic_rag.md
              - Graph RAG: rag/graph_rag.md
              - Self RAG: rag/self_rag.md
              - Adaptive RAG: rag/adaptive_rag.md
              - SFR RAG: rag/sfr_rag.md
              - Advanced Techniques:
                  - HyDE: rag/advanced_techniques/hyde.md
                  - FLARE: rag/advanced_techniques/flare.md
          - Examples:
              - Hybrid Search: notebooks/hybrid_search.ipynb
              - Multivector Search: notebooks/Multivector_on_LanceDB.ipynb
              - Reranking: notebooks/lancedb_reranking.ipynb


  - API & SDK Reference:
      - Overview: api/index.md
      - API Changes: api/api-changes.md
      - LanceDB Cloud REST API: api/cloud.md
      - Client SDKs:
          - Python SDK: python/python.md
          - JavaScript SDK:
              - Current SDK (@lancedb/lancedb): js/globals.md
              - Legacy SDK (vectordb): javascript/modules.md
          - Rust SDK: https://docs.rs/lancedb/latest/lancedb/
  - Changelog:
      - LanceDB Cloud & Enterprise: changelog/lancedb-changelog.md
      - ↗LanceDB Open Source: https://github.com/lancedb/lancedb/releases
  - Studies:
      - Overview: studies/overview.md
      - Late Interaction & ColBERT: studies/late-interaction-colbert.md
      - ↗Improve retrievers with hybrid search and reranking: https://blog.lancedb.com/hybrid-search-and-reranking-report/

extra_css:
  - styles/mkdocsoad.css
  - styles/links.css


extra_javascript:
  # - "extra_js/init_ask_ai_widget.js"
  - "extra_js/reo.js"
  - "extra_js/override.js"

extra:
  analytics:
    provider: google
    property: G-B7NFM40W74
  social:
    - icon: fontawesome/brands/github
      link: https://github.com/lancedb/lancedb
    - icon: fontawesome/brands/x-twitter
      link: https://twitter.com/lancedb
    - icon: fontawesome/brands/linkedin
      link: https://www.linkedin.com/company/lancedb
