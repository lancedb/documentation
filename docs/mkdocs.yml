site_name: LanceDB Documentation
site_url: https://lancedb.github.io/docs
repo_url: https://github.com/lancedb/documentation
edit_uri: https://github.com/lancedb/documentation
repo_name: lancedb/documentation
docs_dir: src
watch:
  - src
  - ../python/python

theme:
  name: "material"
  logo: assets/logo.png
  favicon: assets/logo.png
  palette:
    # Palette toggle for light mode
    - scheme: lancedb
      primary: custom
      toggle:
        icon: material/weather-night
        name: Switch to dark mode
    # Palette toggle for dark mode
    - scheme: slate
      primary: custom
      toggle:
        icon: material/weather-sunny
        name: Switch to light mode
  features:
    - content.code.copy
    - content.tabs.link
    - content.action.edit
    - content.tooltips
    - toc.follow
    - navigation.top
    - navigation.tabs
    - navigation.tabs.sticky
    - navigation.sections
    - navigation.footer
    - navigation.tracking
    - navigation.instant
    - navigation.indexes
    - content.footnote.tooltips
  icon:
    repo: fontawesome/brands/github
    annotation: material/arrow-right-circle
  custom_dir: overrides

plugins:
  - redirects:
      redirect_maps:
        'basic.md': 'quickstart.md'
  - search
  - neoteroi.mkdocsoad:
      use_pymdownx: true
  - autorefs
  - mkdocstrings:
      handlers:
        python:
          paths: [../python]
          options:
            docstring_style: numpy
            heading_level: 3
            show_source: true
            show_symbol_type_in_heading: true
            show_signature_annotations: true
            show_root_heading: true
            members_order: source
            docstring_section_style: list
            signature_crossrefs: true
            separate_signature: true
          import:
            # for cross references
            - https://arrow.apache.org/docs/objects.inv
            - https://pandas.pydata.org/docs/objects.inv
            - https://lancedb.github.io/lance/objects.inv
            - https://docs.pydantic.dev/latest/objects.inv
  - mkdocs-jupyter
  - render_swagger:
      allow_arbitrary_locations: true

markdown_extensions:
  - admonition
  - footnotes
  - pymdownx.critic
  - pymdownx.caret
  - pymdownx.keys
  - pymdownx.mark
  - pymdownx.tilde
  - pymdownx.details
  - pymdownx.highlight:
      anchor_linenums: true
      line_spans: __span
      pygments_lang_class: true
  - pymdownx.inlinehilite
  - pymdownx.snippets:
      base_path: ..
      dedent_subsections: true
  - pymdownx.superfences
  - pymdownx.tabbed:
      alternate_style: true
  - md_in_html
  - abbr
  - attr_list
  - pymdownx.snippets
  - pymdownx.emoji:
      emoji_index: !!python/name:material.extensions.emoji.twemoji
      emoji_generator: !!python/name:material.extensions.emoji.to_svg
  - markdown.extensions.toc:
      baselevel: 1
      permalink: ""

nav:
  - Documentation:
      - Overview:
          - Homepage: index.md
          - What is LanceDB?: 
              - Overview: overview.md
              - FAQs: faq.md
          - LanceDB Cloud: cloud/index.md
          - LanceDB Enterprise:
            - Overview: enterprise/index.md
            - Architecture: enterprise/architecture.md
            - Deployment: enterprise/deployment.md
            - Benchmark: enterprise/benchmark.md
            - Security: enterprise/security.md
      - Getting Started:
          - Quickstart Local: quickstart.md
          - Quickstart Cloud: quickstart-cloud.md
          - Key Concepts:
              - Vector Search: concepts/vector_search.md
              - Storage: concepts/storage.md
              - Data Management: concepts/data_management.md
              - Indexing:
                  - IVFPQ Index: concepts/index_ivfpq.md
                  - HNSW Index: concepts/index_hnsw.md
      - Core Usage:
          - Working with Tables: 
              - Overview: guides/tables/index.md
              - Creating Tables: guides/tables/create.md
              - Updating Tables: guides/tables/update.md
              - Schema Management: guides/tables/schema.md
              - Consistency Settings: guides/tables/consistency.md
              - Merge Insert: guides/tables/merge-insert.md
          - Building an Index:
              - Building a Vector Index: ann_indexes.md
              - Building a Scalar Index: guides/scalar_index.md
              - Building Indexes: guides/build-index.md
          - Structuring Queries:
              - Vector Search: search.md
              - How to Build a Search Query: guides/vector-search.md
              - Full-Text Search (native): fts.md
              - Full-Text Search (tantivy-based): fts_tantivy.md
              - Full-Text Search: guides/full-text-search.md
              - Metadata Filtering: guides/filtering.md
              - Filtering & SQL: sql.md
              - Building SQL Queries: guides/sql-query.md
              - Query Performance: guides/understanding-query-performance.md
          - Configuring Storage: guides/storage.md
      - Advanced Usage:
          - Complex Queries:
              - Hybrid Search:
                  - Overview: hybrid_search/hybrid_search.md
                  - Building Hybrid Searches: guides/hybrid-search.md
                  - Comparing Rerankers: hybrid_search/eval.md
                  - Airbnb financial data example: notebooks/hybrid_search.ipynb
              - Multivector Search:
                  - Overview: guides/multi-vector.md
                  - Building Multivector Queries: guides/multivector-search.md
                  - Example: notebooks/Multivector_on_LanceDB.ipynb
              - Reranking:
                  - Quickstart: reranking/index.md
                  - Cohere Reranker: reranking/cohere.md
                  - Linear Combination Reranker: reranking/linear_combination.md
                  - Reciprocal Rank Fusion Reranker: reranking/rrf.md
                  - Cross Encoder Reranker: reranking/cross_encoder.md
                  - ColBERT Reranker: reranking/colbert.md
                  - Jina Reranker: reranking/jina.md
                  - OpenAI Reranker: reranking/openai.md
                  - AnswerDotAi Rerankers: reranking/answerdotai.md
                  - Voyage AI Rerankers: reranking/voyageai.md
                  - Building Custom Rerankers: reranking/custom_reranker.md
                  - Example: notebooks/lancedb_reranking.ipynb
          - Working with Embeddings:
              - What are Embeddings?: embeddings/understanding_embeddings.md
              - Getting Started: embeddings/index.md
              - Embedding Models: embeddings/embedding_functions.md
              - Available Models:
                  - Overview: embeddings/default_embedding_functions.md
                  - Text Embedding Models:
                      - Sentence Transformers: embeddings/available_embedding_models/text_embedding_functions/sentence_transformers.md
                      - Huggingface Embedding Models: embeddings/available_embedding_models/text_embedding_functions/huggingface_embedding.md
                      - Ollama Embeddings: embeddings/available_embedding_models/text_embedding_functions/ollama_embedding.md
                      - OpenAI Embeddings: embeddings/available_embedding_models/text_embedding_functions/openai_embedding.md
                      - Instructor Embeddings: embeddings/available_embedding_models/text_embedding_functions/instructor_embedding.md
                      - Gemini Embeddings: embeddings/available_embedding_models/text_embedding_functions/gemini_embedding.md
                      - Cohere Embeddings: embeddings/available_embedding_models/text_embedding_functions/cohere_embedding.md
                      - Jina Embeddings: embeddings/available_embedding_models/text_embedding_functions/jina_embedding.md
                      - AWS Bedrock Text Embedding Functions: embeddings/available_embedding_models/text_embedding_functions/aws_bedrock_embedding.md
                      - IBM watsonx.ai Embeddings: embeddings/available_embedding_models/text_embedding_functions/ibm_watsonx_ai_embedding.md
                      - Voyage AI Embeddings: embeddings/available_embedding_models/text_embedding_functions/voyageai_embedding.md
                  - Multimodal Embedding Models:
                      - OpenClip embeddings: embeddings/available_embedding_models/multimodal_embedding_functions/openclip_embedding.md
                      - Imagebind embeddings: embeddings/available_embedding_models/multimodal_embedding_functions/imagebind_embedding.md
                      - Jina Embeddings: embeddings/available_embedding_models/multimodal_embedding_functions/jina_multimodal_embedding.md
              - User-Defined Embedding Models: embeddings/custom_embedding_function.md
              - Variables and Secrets: embeddings/variables_and_secrets.md
          - Versioning & Reproducibility:
              - Versioning Guide: guides/versioning.md
              - Sync API: notebooks/reproducibility.ipynb
              - Async API: notebooks/reproducibility_async.ipynb
          - Troubleshooting: troubleshooting.md
    

  - Tutorials & Integrations:
      - Integrations:
          - Overview: integrations/index.md
          - Platforms:
              - Pandas and PyArrow: python/pandas_and_pyarrow.md
              - Polars: python/polars_arrow.md
              - DuckDB: python/duckdb.md
              - Voxel51: integrations/voxel51.md
              - dlt: integrations/dlt.md
              - phidata: integrations/phidata.md
          - Embeddings:
              - Available Models:
                  - Overview: embeddings/default_embedding_functions.md
                  - Text Embedding Models:
                      - Sentence Transformers: embeddings/available_embedding_models/text_embedding_functions/sentence_transformers.md
                      - Huggingface Embedding Models: embeddings/available_embedding_models/text_embedding_functions/huggingface_embedding.md
                      - Ollama Embeddings: embeddings/available_embedding_models/text_embedding_functions/ollama_embedding.md
                      - OpenAI Embeddings: embeddings/available_embedding_models/text_embedding_functions/openai_embedding.md
                      - Instructor Embeddings: embeddings/available_embedding_models/text_embedding_functions/instructor_embedding.md
                      - Gemini Embeddings: embeddings/available_embedding_models/text_embedding_functions/gemini_embedding.md
                      - Cohere Embeddings: embeddings/available_embedding_models/text_embedding_functions/cohere_embedding.md
                      - Jina Embeddings: embeddings/available_embedding_models/text_embedding_functions/jina_embedding.md
                      - AWS Bedrock Text Embedding Functions: embeddings/available_embedding_models/text_embedding_functions/aws_bedrock_embedding.md
                      - IBM watsonx.ai Embeddings: embeddings/available_embedding_models/text_embedding_functions/ibm_watsonx_ai_embedding.md
                      - Voyage AI Embeddings: embeddings/available_embedding_models/text_embedding_functions/voyageai_embedding.md
                  - Multimodal Embedding Models:
                      - OpenClip embeddings: embeddings/available_embedding_models/multimodal_embedding_functions/openclip_embedding.md
                      - Imagebind embeddings: embeddings/available_embedding_models/multimodal_embedding_functions/imagebind_embedding.md
                      - Jina Embeddings: embeddings/available_embedding_models/multimodal_embedding_functions/jina_multimodal_embedding.md
          - Rerankers:
              - Quickstart: reranking/index.md
              - Cohere Reranker: reranking/cohere.md
              - Linear Combination Reranker: reranking/linear_combination.md
              - Reciprocal Rank Fusion Reranker: reranking/rrf.md
              - Cross Encoder Reranker: reranking/cross_encoder.md
              - ColBERT Reranker: reranking/colbert.md
              - Jina Reranker: reranking/jina.md
              - OpenAI Reranker: reranking/openai.md
              - AnswerDotAi Rerankers: reranking/answerdotai.md
              - Voyage AI Rerankers: reranking/voyageai.md
              - Building Custom Rerankers: reranking/custom_reranker.md
              - Example: notebooks/lancedb_reranking.ipynb
          - Frameworks:
              - LangChain:
                  - LangChain 🔗: integrations/langchain.md
                  - LangChain demo: notebooks/langchain_demo.ipynb
                  - LangChain JS/TS 🔗: https://js.langchain.com/docs/integrations/vectorstores/lancedb
              - LlamaIndex 🦙:
                  - LlamaIndex docs: integrations/llamaIndex.md
                  - LlamaIndex demo: notebooks/llamaIndex_demo.ipynb
              - Pydantic: python/pydantic.md
              - PromptTools: integrations/prompttools.md
              - Genkit: integrations/genkit.md
      - Tutorials:
          - Overview: examples/index.md
          - Python:
              - Overview: examples/examples_python.md
              - Build From Scratch: examples/python_examples/build_from_scratch.md
              - Multimodal: examples/python_examples/multimodal.md
              - Rag: examples/python_examples/rag.md
              - Vector Search: examples/python_examples/vector_search.md
              - Chatbot: examples/python_examples/chatbot.md
              - Evaluation: examples/python_examples/evaluations.md
              - AI Agent: examples/python_examples/aiagent.md
              - Recommender System: examples/python_examples/recommendersystem.md
              - Miscellaneous:
                  - Serverless QA Bot with S3 and Lambda: examples/serverless_lancedb_with_s3_and_lambda.md
                  - Serverless QA Bot with Modal: examples/serverless_qa_bot_with_modal_and_langchain.md
          - JavaScript:
              - Overview: examples/examples_js.md
              - Serverless Website Chatbot: examples/serverless_website_chatbot.md
              - YouTube Transcript Search: examples/youtube_transcript_bot_with_nodejs.md
              - TransformersJS Embedding Search: examples/transformerjs_embedding_search_nodejs.md
          - Rust:
              - Overview: examples/examples_rust.md
          - RAG:
              - Vanilla RAG: rag/vanilla_rag.md
              - Multi-Head RAG: rag/multi_head_rag.md
              - Corrective RAG: rag/corrective_rag.md
              - Agentic RAG: rag/agentic_rag.md
              - Graph RAG: rag/graph_rag.md
              - Self RAG: rag/self_rag.md
              - Adaptive RAG: rag/adaptive_rag.md
              - SFR RAG: rag/sfr_rag.md
              - Advanced Techniques:
                  - HyDE: rag/advanced_techniques/hyde.md
                  - FLARE: rag/advanced_techniques/flare.md

  - API & SDK Reference:
      - Overview: api_reference.md
      - API Migration: migration.md
      - LanceDB Cloud REST API: cloud/rest.md
      - Client SDKs:
          - Python SDK: python/python.md
          - JavaScript SDK:
              - Current SDK (@lancedb/lancedb): js/globals.md
              - Legacy SDK (vectordb): javascript/modules.md
          - Rust SDK: https://docs.rs/lancedb/latest/lancedb/

  - Studies:
      - Overview: studies/overview.md
      - ↗Improve retrievers with hybrid search and reranking: https://blog.lancedb.com/hybrid-search-and-reranking-report/

extra_css:
  - styles/mkdocsoad.css
#  - styles/global.css
#  - styles/extra.css

extra_javascript:
  - "extra_js/init_ask_ai_widget.js"
  - "extra_js/reo.js"

extra:
  analytics:
    provider: google
    property: G-B7NFM40W74
  social:
    - icon: fontawesome/brands/github
      link: https://github.com/lancedb/lancedb
    - icon: fontawesome/brands/x-twitter
      link: https://twitter.com/lancedb
    - icon: fontawesome/brands/linkedin
      link: https://www.linkedin.com/company/lancedb
